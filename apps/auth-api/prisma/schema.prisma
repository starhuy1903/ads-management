generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model advertisement_type {
  id       Int        @id @default(autoincrement())
  name     String
  location location[]
}

model district {
  id       Int        @id @default(autoincrement())
  name     String
  location location[]
  ward     ward[]
}

model location {
  id                 Int                @id @default(autoincrement())
  lat                Decimal
  long               Decimal
  isPlanning         Boolean            @default(false)
  district_id        Int
  ward_id            Int
  full_address       String
  type_id            Int
  ad_type_id         Int
  image_urls         String[]
  created_time       DateTime           @default(now())
  modified_time      DateTime
  advertisement_type advertisement_type @relation(fields: [ad_type_id], references: [id])
  district           district           @relation(fields: [district_id], references: [id])
  location_type      location_type      @relation(fields: [type_id], references: [id])
  ward               ward               @relation(fields: [ward_id], references: [id])
  panel              panel[]
}

model location_type {
  id       Int        @id @default(autoincrement())
  name     String
  location location[]
}

model panel {
  id                    Int        @id @default(autoincrement())
  type_id               Int
  width                 Decimal
  height                Decimal
  location_id           Int
  image_urls            String[]
  create_contract_date  DateTime
  expired_contract_date DateTime
  company_email         String
  company_number        String
  created_time          DateTime   @default(now())
  modified_time         DateTime
  location              location   @relation(fields: [location_id], references: [id])
  panel_type            panel_type @relation(fields: [type_id], references: [id])
}

model panel_type {
  id    Int     @id @default(autoincrement())
  name  String
  panel panel[]
}

model ward {
  id          Int        @id @default(autoincrement())
  name        String
  district_id Int
  location    location[]
  district    district   @relation(fields: [district_id], references: [id])
}

model user {
  id               Int      @id @default(autoincrement())
  email            String   @unique
  password         String
  first_name       String
  last_name        String
  phone_number     String
  dob              DateTime
  role             String
  account_verified Boolean  @default(false)
  reset_password   Boolean  @default(false)
  created_at       DateTime @default(now())
  modified_at      DateTime @updatedAt
  tokens           token[]
}

model token {
  id          String   @id @default(uuid())
  user_id     Int
  token       String
  expires_at  DateTime
  created_at  DateTime @default(now())
  modified_at DateTime @updatedAt
  user        user     @relation(fields: [user_id], references: [id], onDelete: Cascade)
}
